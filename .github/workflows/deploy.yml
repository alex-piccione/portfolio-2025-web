name: Deploy

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

env:
  #IMAGE: portfolio
  # it MUST contain start with ghcr.io/ and it MUST be lowercase
  IMAGE: ghcr.io/${{ github.repository_owner }}/portfolio-website
  VERSION: 0.1.${{github.run_number}}

jobs:
  #build:
  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Build Docker image
  #      run: |
  #        docker image build -t $IMAGE --build-arg VERSION=$VERSION .
  #        #--build-arg CONFIGURATION_FILE=$CONFIGURATION_FILE -f ./Dockerfile .
  #        docker image inspect $IMAGE | grep Size | awk '{print $2}'
  #        #image_size=$(docker image inspect $IMAGE | grep Size | awk '{print $2}')
  #        image_size=$(docker image inspect $IMAGE | grep Size | awk '{printf "%.2f MB", $2/1024/1024}')
  #        echo "### Docker image size: $image_size" >> $GITHUB_STEP_SUMMARY

  docker_image:
    name: 🏗️ Create Docker image
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v5

      - name: ⚙️ Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # EXAMPLE, not required anymore
      #- name: ⚙️ prepare IMAGE name
      #  # lowercase repository name
      #  run: echo "GHCR_IMAGE=ghcr.io/${GITHUB_REPOSITORY@L}" >> "${GITHUB_ENV}"
      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          #context: API_Rust
          #file: API_Rust/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE }}:${{ env.VERSION }}
          build-args: |
            VERSION=${{ env.VERSION }}
          # Use the GitHub Actions cache for loading previous layers
          cache-from: type=gha
          # Save the new layers to the GitHub Actions cache
          # "mode=max" ensures that all the intermediate layers are saved
          cache-to: type=gha,mode=max

      - name: Print image name
        run: |
          echo "### Docker image: ${{ env.IMAGE }}:${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY

  ## ATM we use a restricted permission key, use HashiCorp Vault in future
  ## See the README for how to create setup the key.

  deploy:
    name: 🚀 Call deploy script
    runs-on: ubuntu-latest
    needs: docker_image
    steps:
      - name: Run server script
        run: |
          echo run deploy script
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{secrets.SERVER_IP}} > ~/.ssh/known_hosts          
          chmod 600 ~/.ssh/id_rsa          
          # call a symbolik link
          ssh -i ~/.ssh/id_rsa ${{secrets.SERVER_USER}}@${{secrets.SERVER_IP}} project-portfolio_deploy-website
          STATUS=$?
          rm ~/.ssh/id_rsa
          if [ $STATUS -ne 0 ]; then
            echo "ERROR: Remote deploy script failed with exit code $STATUS"
            exit $STATUS
          fi
